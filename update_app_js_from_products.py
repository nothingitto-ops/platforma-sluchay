#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import re
from datetime import datetime

def update_app_js_from_products():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ app.min.js –∏–∑ products.json"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ app.min.js –∏–∑ products.json...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    with open('products.json', 'r', encoding='utf-8') as f:
        products = json.load(f)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
    all_products = sorted(products, key=lambda x: int(x.get('order', '0')))
    
    print(f"üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(all_products)}")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π app.min.js
    with open('web/app.min.js', 'r', encoding='utf-8') as f:
        app_js_content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    all_items_js = []
    for product in all_products:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        images_str = product.get('images', '')
        if images_str:
            images = [img.strip() for img in images_str.split(',') if img.strip()]
        else:
            images = []
        
        item_js = f'''  {{
    "images": [
      {",\\n      ".join([f'"{img}"' for img in images])}
    ],
    "title": "{product.get('title', '')}",
    "price": "{product.get('price', '')}",
    "desc": "{product.get('desc', '')}",
    "meta": "{product.get('meta', '')}",
    "link": "{product.get('link', 'https://t.me/stub123')}",
    "status": "{product.get('status', 'stock')}",
    "order": {product.get('order', '0')},
    "section": "{product.get('section', 'home')}"
  }}'''
        all_items_js.append(item_js)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ items
    items_pattern = r'const items = \[\s*\{.*?\}\s*\]; // –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞'
    items_replacement = f'const items = [\n{",\\n".join(all_items_js)}\n]; // –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞'
    
    app_js_content = re.sub(items_pattern, items_replacement, app_js_content, flags=re.DOTALL)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –¥–∞—Ç–æ–π
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    app_js_content = re.sub(
        r'// –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ Google Sheets: .*',
        f'// –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ products.json: {timestamp}',
        app_js_content
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('web/app.min.js', 'w', encoding='utf-8') as f:
        f.write(app_js_content)
    
    print("‚úÖ app.min.js –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑ products.json")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–Ω:")
    for product in products:
        title = product.get('title', '')
        price = product.get('price', '')
        if '–ø–ª–∞—Ç–æ–∫' in title.lower() or '—Ü–≤–µ—Ç–æ—á–Ω—ã–π' in title.lower():
            print(f"‚Ä¢ {title}: {price}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ app.min.js —Å –Ω–æ–≤—ã–º–∏ —Ü–µ–Ω–∞–º–∏...")
    print("=" * 50)
    
    update_app_js_from_products()
    
    print("=" * 50)
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –ß—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:")
    print("‚Ä¢ –ü–ª–∞—Ç–∫–∏ –Ω–∞ —à–µ—é: 1500 —Ä. ‚Üí 1000 —Ä.")
    print("‚Ä¢ –ü–æ—è—Å —Ü–≤–µ—Ç–æ—á–Ω—ã–π: 3600 —Ä. ‚Üí 3000 —Ä.")
    print("‚Ä¢ app.min.js —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")

if __name__ == "__main__":
    main()
