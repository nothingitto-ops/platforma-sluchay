#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üìù Update Data Only - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Platforma
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ web_combined_working
"""

import os
import json
import shutil
from datetime import datetime

def main():
    print("üìù Update Data Only")
    print("=" * 30)
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    web_dir = "web_combined_working"
    products_file = "products.json"
    images_dir = "img"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ web_combined_working
    if not os.path.exists(web_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ {web_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º products.json
        print("üìù –û–±–Ω–æ–≤–ª—è–µ–º products.json...")
        if os.path.exists(products_file):
            web_products_file = os.path.join(web_dir, 'products.json')
            shutil.copy2(products_file, web_products_file)
            print(f"‚úÖ {products_file} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {web_dir}")
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª {products_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        print("üñºÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        if os.path.exists(images_dir):
            web_img_dir = os.path.join(web_dir, 'img')
            if os.path.exists(web_img_dir):
                shutil.rmtree(web_img_dir)
            shutil.copytree(images_dir, web_img_dir)
            print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ {web_dir}")
        else:
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ {images_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º app.min.js –µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç
        print("üîß –û–±–Ω–æ–≤–ª—è–µ–º app.min.js...")
        update_js_scripts = [
            'update_js_from_json.py',
            os.path.join(web_dir, 'update_js_from_json.py')
        ]
        
        js_updated = False
        for script in update_js_scripts:
            if os.path.exists(script):
                print(f"üìù –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞: {script}")
                import subprocess
                result = subprocess.run(['python', script], 
                                      capture_output=True, text=True)
                
                if result.returncode == 0:
                    print("‚úÖ app.min.js –æ–±–Ω–æ–≤–ª–µ–Ω")
                    js_updated = True
                    break
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è app.min.js: {result.stderr}")
        
        if not js_updated:
            print("‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è app.min.js –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Ö–µ—à –¥–∞–Ω–Ω—ã—Ö
        print("üîê –°–æ–∑–¥–∞–µ–º —Ö–µ—à –¥–∞–Ω–Ω—ã—Ö...")
        if os.path.exists(products_file):
            with open(products_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
                import hashlib
                data_str = json.dumps(data, sort_keys=True, ensure_ascii=False)
                data_hash = hashlib.md5(data_str.encode('utf-8')).hexdigest()[:8]
                
                hash_data = {
                    "hash": data_hash,
                    "timestamp": datetime.now().isoformat(),
                    "products_count": len(data)
                }
                
                hash_file = os.path.join(web_dir, 'data_hash.json')
                with open(hash_file, 'w', encoding='utf-8') as f:
                    json.dump(hash_data, f, ensure_ascii=False, indent=2)
                
                print(f"‚úÖ –•–µ—à –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω: {data_hash}")
        
        print("")
        print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ web_combined_working —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ products.json")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
