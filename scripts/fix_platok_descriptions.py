#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import re
from datetime import datetime

def fix_platok_descriptions():
    """–ú–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –ø–ª–∞—Ç–∫–æ–≤ –º–µ—Å—Ç–∞–º–∏"""
    
    print("üîÑ –ú–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –ø–ª–∞—Ç–∫–æ–≤ –º–µ—Å—Ç–∞–º–∏...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π app.min.js
    try:
        with open('../web/app.min.js', 'r', encoding='utf-8') as f:
            current_js = f.read()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è app.min.js: {e}")
        return False
    
    # –ù–∞—Ö–æ–¥–∏–º –º–∞—Å—Å–∏–≤ items
    pattern = r'const items = \[(.*?)\];'
    match = re.search(pattern, current_js, re.DOTALL)
    
    if not match:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–∞—Å—Å–∏–≤ items –≤ app.min.js")
        return False
    
    items_text = match.group(1)
    
    # –ü–∞—Ä—Å–∏–º JSON
    try:
        items = json.loads(f'[{items_text}]')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return False
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–ª–∞—Ç–∫–∏ –∏ –º–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –º–µ—Å—Ç–∞–º–∏
    platok_9 = None
    platok_12 = None
    
    for item in items:
        if item.get('title') == '–ü–ª–∞—Ç–æ–∫ –Ω–∞ —à–µ—é':
            if item.get('order') == 9:
                platok_9 = item
            elif item.get('order') == 12:
                platok_12 = item
    
    if platok_9 and platok_12:
        print(f"üìù –ù–∞–π–¥–µ–Ω—ã –ø–ª–∞—Ç–∫–∏:")
        print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ 9: {platok_9['desc']}")
        print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ 12: {platok_12['desc']}")
        
        # –ú–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –º–µ—Å—Ç–∞–º–∏
        temp_desc = platok_9['desc']
        platok_9['desc'] = platok_12['desc']
        platok_12['desc'] = temp_desc
        
        print(f"üîÑ –û–ø–∏—Å–∞–Ω–∏—è –ø–æ–º–µ–Ω—è–Ω—ã –º–µ—Å—Ç–∞–º–∏:")
        print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ 9: {platok_9['desc']}")
        print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ 12: {platok_12['desc']}")
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –æ–±–∞ –ø–ª–∞—Ç–∫–∞")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π JSON
    items_json = json.dumps(items, ensure_ascii=False, indent=2)
    
    # –ó–∞–º–µ–Ω—è–µ–º –º–∞—Å—Å–∏–≤ items –≤ JavaScript –∫–æ–¥–µ
    replacement = f'const items = {items_json};'
    new_js = re.sub(pattern, replacement, current_js, flags=re.DOTALL)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –≤—Ä–µ–º–µ–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    update_comment = f'// –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ Google Sheets: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}\n'
    
    if not new_js.startswith('// –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ Google Sheets'):
        new_js = update_comment + new_js
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π app.min.js
    try:
        with open('../web/app.min.js', 'w', encoding='utf-8') as f:
            f.write(new_js)
        print(f"‚úÖ –§–∞–π–ª app.min.js –æ–±–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è app.min.js: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_dir = f'../backups/site_backup_{timestamp}'
    
    try:
        os.makedirs(backup_dir, exist_ok=True)
        import shutil
        shutil.copy2('../web/app.min.js', f'{backup_dir}/app.min.js')
        shutil.copy2('../web/index.html', f'{backup_dir}/index.html')
        shutil.copy2('../web/styles.min.css', f'{backup_dir}/styles.min.css')
        shutil.copy2('../web/card-titles.css', f'{backup_dir}/card-titles.css')
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_dir}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
    
    print(f"\nüéâ –û–ø–∏—Å–∞–Ω–∏—è –ø–ª–∞—Ç–∫–æ–≤ –ø–æ–º–µ–Ω—è–Ω—ã –º–µ—Å—Ç–∞–º–∏!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–∫–æ–≤
    print(f"\nüß£ –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–∫–æ–≤:")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ –Ω–∞ —à–µ—é (product_9): {platok_9['desc']}")
    print(f"   ‚Ä¢ –ü–ª–∞—Ç–æ–∫ –Ω–∞ —à–µ—é (product_12): {platok_12['desc']}")
    
    print(f"\n‚úÖ –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!")
    print(f"üåê –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    return True

if __name__ == "__main__":
    fix_platok_descriptions()
