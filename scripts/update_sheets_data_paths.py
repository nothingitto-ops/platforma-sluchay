#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import time

def update_sheets_data():
    """–û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ sheets_data.json —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ ID"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    with open('sheets_data.json', 'r', encoding='utf-8') as f:
        products = json.load(f)
    
    print("üìù –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ sheets_data.json...")
    
    # –ú–∞–ø–ø–∏–Ω–≥ ID -> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∏–∑ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö)
    id_image_counts = {
        "1": 4,  # shawl-2
        "2": 4,  # apron-1  
        "3": 3,  # belt-trousers
        "4": 3,  # shawl-1
        "5": 4,  # shirt-pants-white
        "6": 5,  # nessffo-bag
        "7": 6,  # shirt-olive
        "8": 5,  # pants-with-belt-skirt-U2
        "9": 6,  # shirt-white
        "10": 4, # belt-bag-p1
        "11": 4, # belt-skirt-1
        "12": 4  # belt-nessffo-1
    }
    
    for product in products:
        if product['id'] and product['id'].isdigit():
            product_id = product['id']
            
            if product_id in id_image_counts:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
                image_count = id_image_counts[product_id]
                new_images = []
                
                for i in range(1, image_count + 1):
                    new_images.append(f"product_{product_id}/product_{product_id}_{i}.jpg")
                
                product['images'] = '|'.join(new_images)
                print(f"üîÑ ID {product_id}: –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º ({image_count} —Ñ–∞–π–ª–æ–≤)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    with open('sheets_data.json', 'w', encoding='utf-8') as f:
        json.dump(products, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ sheets_data.json –æ–±–Ω–æ–≤–ª–µ–Ω!")

def create_tsv_for_sheets():
    """–°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google Sheets"""
    with open('sheets_data.json', 'r', encoding='utf-8') as f:
        products = json.load(f)
    
    print("üìä –°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è Google Sheets...")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    valid_products = []
    seen_ids = set()
    
    for product in products:
        if product['id'] and product['id'].isdigit() and product['id'] not in seen_ids:
            seen_ids.add(product['id'])
            valid_products.append(product)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID
    valid_products.sort(key=lambda x: int(x['id']))
    
    # –°–æ–∑–¥–∞–µ–º TSV
    tsv_content = "ID\tSection\tTitle\tPrice\tDesc\tMeta\tStatus\tImages\tLink\n"
    
    for product in valid_products:
        row = [
            product['id'],
            product['section'],
            product['title'],
            product['price'],
            product['desc'],
            product['meta'],
            product['status'],
            product['images'],
            product['link']
        ]
        tsv_content += '\t'.join(row) + '\n'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º TSV —Ñ–∞–π–ª
    timestamp = int(time.time())
    filename = f"sheets-update-{timestamp}.tsv"
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(tsv_content)
    
    print(f"‚úÖ TSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
    return filename

if __name__ == "__main__":
    print("üöÄ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã ID...")
    
    # 1. –û–±–Ω–æ–≤–ª—è–µ–º sheets_data.json
    update_sheets_data()
    
    # 2. –°–æ–∑–¥–∞–µ–º TSV –¥–ª—è Google Sheets
    tsv_file = create_tsv_for_sheets()
    
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìÅ TSV —Ñ–∞–π–ª –¥–ª—è Google Sheets: {tsv_file}")
    print(f"üìù –û–±–Ω–æ–≤–∏—Ç–µ Google Sheets, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ {tsv_file}")
