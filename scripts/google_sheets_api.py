#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
from datetime import datetime
import requests

class GoogleSheetsAPI:
    def __init__(self):
        # ID –≤–∞—à–µ–π Google —Ç–∞–±–ª–∏—Ü—ã (–∏–∑ URL)
        self.spreadsheet_id = "1RGdW7QcHV6BgZHJnSMzXKkmsXDYZulMojN312tgvI6PK86H8dRjReYUOHI2l_aVYzLg2NIjAcir89g"
        self.api_key = None
        self.access_token = None
        
    def setup_api_key(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–∞"""
        print("üîë –ù–ê–°–¢–†–û–ô–ö–ê GOOGLE SHEETS API")
        print("=" * 50)
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console:")
        print("   https://console.cloud.google.com/")
        print()
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π")
        print()
        print("3. –í–∫–ª—é—á–∏—Ç–µ Google Sheets API:")
        print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'APIs & Services' > 'Library'")
        print("   - –ù–∞–π–¥–∏—Ç–µ 'Google Sheets API' –∏ –≤–∫–ª—é—á–∏—Ç–µ –µ–≥–æ")
        print()
        print("4. –°–æ–∑–¥–∞–π—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'APIs & Services' > 'Credentials'")
        print("   - –ù–∞–∂–º–∏—Ç–µ 'Create Credentials' > 'API Key'")
        print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ API –∫–ª—é—á")
        print()
        
        api_key = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á: ").strip()
        if api_key:
            self.api_key = api_key
            self.save_config()
            print("‚úÖ API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
            return True
        return False
    
    def setup_oauth(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth 2.0 –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"""
        print("üîê –ù–ê–°–¢–†–û–ô–ö–ê OAUTH 2.0")
        print("=" * 50)
        print("–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å OAuth 2.0:")
        print()
        print("1. –í Google Cloud Console —Å–æ–∑–¥–∞–π—Ç–µ OAuth 2.0 credentials:")
        print("   - 'APIs & Services' > 'Credentials'")
        print("   - 'Create Credentials' > 'OAuth 2.0 Client IDs'")
        print("   - –í—ã–±–µ—Ä–∏—Ç–µ 'Desktop application'")
        print()
        print("2. –°–∫–∞—á–∞–π—Ç–µ JSON —Ñ–∞–π–ª —Å credentials")
        print("3. –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –µ–≥–æ –≤ 'credentials.json' –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
        print()
        
        if os.path.exists('credentials.json'):
            print("‚úÖ –§–∞–π–ª credentials.json –Ω–∞–π–¥–µ–Ω!")
            return True
        else:
            print("‚ùå –§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        config = {
            'api_key': self.api_key,
            'spreadsheet_id': self.spreadsheet_id
        }
        with open('google_sheets_config.json', 'w') as f:
            json.dump(config, f)
    
    def load_config(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            with open('google_sheets_config.json', 'r') as f:
                config = json.load(f)
                self.api_key = config.get('api_key')
                self.spreadsheet_id = config.get('spreadsheet_id')
                return True
        except:
            return False
    
    def update_sheets_simple(self):
        """–ü—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø"""
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã
            with open('products.json', 'r', encoding='utf-8') as f:
                products = json.load(f)
            
            # –°–æ–∑–¥–∞–µ–º TSV –¥–∞–Ω–Ω—ã–µ
            tsv_lines = ["Section\tTitle\tPrice\tDesc\tMeta\tStatus\tImages\tLink"]
            
            for product in products:
                tsv_line = f"home\t{product['title']}\t{product.get('price', '')}\t{product.get('desc', '')}\t{product.get('meta', '')}\t{product.get('status', '')}\t{product['images']}\thttps://t.me/stub123"
                tsv_lines.append(tsv_line)
            
            tsv_content = "\n".join(tsv_lines)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            filename = f"sheets-update-{datetime.now().strftime('%Y%m%d-%H%M%S')}.tsv"
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(tsv_content)
            
            print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
            print(f"üìä –¢–æ–≤–∞—Ä–æ–≤: {len(products)}")
            print()
            print("üìã –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Google Sheets")
            print("2. –í—ã–¥–µ–ª–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (Ctrl+A)")
            print("3. –£–¥–∞–ª–∏—Ç–µ (Delete)")
            print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤—ã—à–µ")
            print("5. –í—Å—Ç–∞–≤—å—Ç–µ –≤ Google Sheets (Ctrl+V)")
            print("6. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ (Ctrl+S)")
            
            return filename
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return None
    
    def update_sheets_api(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Google Sheets API"""
        if not self.api_key:
            print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã
            with open('products.json', 'r', encoding='utf-8') as f:
                products = json.load(f)
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            values = [["Section", "Title", "Price", "Desc", "Meta", "Status", "Images", "Link"]]
            
            for product in products:
                row = [
                    "home",
                    product['title'],
                    product.get('price', ''),
                    product.get('desc', ''),
                    product.get('meta', ''),
                    product.get('status', ''),
                    product['images'],
                    "https://t.me/stub123"
                ]
                values.append(row)
            
            # URL –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            url = f"https://sheets.googleapis.com/v4/spreadsheets/{self.spreadsheet_id}/values/A1:Z1000?valueInputOption=RAW&key={self.api_key}"
            
            # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            data = {
                "values": values
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = requests.put(url, json=data)
            
            if response.status_code == 200:
                print("‚úÖ Google Sheets –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False

    async def update_product_order(self, product_id: str, new_order: int):
        """–û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Ç–æ–≤–∞—Ä–∞ –≤ Google Sheets"""
        try:
            if not self.api_key:
                print(f"‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Ç–æ–≤–∞—Ä–∞ {product_id}")
                return False
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Sheets
            url = f"https://sheets.googleapis.com/v4/spreadsheets/{self.spreadsheet_id}/values/A1:Z1000?key={self.api_key}"
            response = requests.get(url)
            
            if response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Sheets: {response.status_code}")
                return False
            
            data = response.json()
            values = data.get('values', [])
            
            if not values:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return False
            
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–æ–≤–∞—Ä–æ–º –ø–æ ID
            target_row = None
            for i, row in enumerate(values):
                if len(row) > 0 and str(product_id) in str(row):
                    target_row = i
                    break
            
            if target_row is None:
                print(f"‚ùå –¢–æ–≤–∞—Ä —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
                return False
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–æ—Ä—è–¥–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–æ–ª–æ–Ω–∫–µ
            # –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É order –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            if len(values[target_row]) < 9:  # –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ order
                values[target_row].append(str(new_order))
            else:
                values[target_row][8] = str(new_order)  # –ö–æ–ª–æ–Ω–∫–∞ I (–∏–Ω–¥–µ–∫—Å 8)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            update_url = f"https://sheets.googleapis.com/v4/spreadsheets/{self.spreadsheet_id}/values/A1:Z1000?valueInputOption=RAW&key={self.api_key}"
            update_data = {"values": values}
            
            update_response = requests.put(update_url, json=update_data)
            
            if update_response.status_code == 200:
                print(f"‚úÖ –ü–æ—Ä—è–¥–æ–∫ —Ç–æ–≤–∞—Ä–∞ {product_id} –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Sheets: {new_order}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞: {update_response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Ç–æ–≤–∞—Ä–∞ {product_id}: {e}")
            return False

    async def add_product_row(self, row_data: list):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å —Ç–æ–≤–∞—Ä–æ–º –≤ Google Sheets"""
        try:
            if not self.api_key:
                print(f"‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞")
                return False
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω–µ—Ü —Ç–∞–±–ª–∏—Ü—ã
            url = f"https://sheets.googleapis.com/v4/spreadsheets/{self.spreadsheet_id}/values/A:Z:append?valueInputOption=RAW&key={self.api_key}"
            
            data = {
                "values": [row_data]
            }
            
            response = requests.post(url, json=data)
            
            if response.status_code == 200:
                print(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ Google Sheets")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {e}")
            return False

def main():
    api = GoogleSheetsAPI()
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not api.load_config():
        print("üîß –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API")
        if not api.setup_api_key():
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return
    
    print("üìä –û–ë–ù–û–í–õ–ï–ù–ò–ï GOOGLE SHEETS")
    print("=" * 30)
    
    # –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ API
    if api.api_key:
        print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ API...")
        if api.update_sheets_api():
            return
    
    # –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    print("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    api.update_sheets_simple()

if __name__ == "__main__":
    main()
