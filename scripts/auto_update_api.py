#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import requests
from datetime import datetime

def auto_update_google_sheets_api():
    """–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Sheets —á–µ—Ä–µ–∑ API"""
    
    print("üöÄ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        # –ò—â–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        config_paths = [
            'google_api_config.json',
            'scripts/google_api_config.json',
            os.path.join(os.path.dirname(__file__), 'google_api_config.json')
        ]
        
        config = None
        for path in config_paths:
            if os.path.exists(path):
                with open(path, 'r') as f:
                    config = json.load(f)
                    break
        
        if not config:
            raise FileNotFoundError("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        api_key = config.get('api_key')
        spreadsheet_id = config.get('spreadsheet_id')
    except FileNotFoundError:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/setup_google_api.py")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    if not api_key or not spreadsheet_id:
        print("‚ùå API –∫–ª—é—á –∏–ª–∏ ID —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/setup_google_api.py")
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã
    try:
        with open('products.json', 'r', encoding='utf-8') as f:
            products = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: {e}")
        return False
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
    print(f"üîë API –∫–ª—é—á: {api_key[:10]}...")
    print(f"üìã –¢–∞–±–ª–∏—Ü–∞: {spreadsheet_id}")
    print()
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    print("üì• –ü–æ–ª—É—á–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã...")
    try:
        read_url = f"https://sheets.googleapis.com/v4/spreadsheets/{spreadsheet_id}/values/A1:Z1000?key={api_key}"
        read_response = requests.get(read_url, timeout=30)
        
        if read_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {read_response.status_code}")
            return False
            
        existing_data = read_response.json().get('values', [])
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫: {len(existing_data)}")
        
        # –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if not existing_data:
            existing_data = [["Section", "Title", "Price", "Desc", "Meta", "Status", "Images", "Link"]]
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    new_rows = []
    
    for product in products:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤ —Ç–∞–±–ª–∏—Ü–µ
        product_exists = any(
            row[1] == product['title'] if len(row) > 1 else False 
            for row in existing_data[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        )
        
        if not product_exists:
            row = [
                "home",
                product['title'],
                product.get('price', ''),
                product.get('desc', ''),
                product.get('meta', ''),
                product.get('status', ''),
                product['images'],
                "https://t.me/stub123"
            ]
            new_rows.append(row)
    
    if not new_rows:
        print("‚úÖ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–∂–µ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ!")
        return True
    
    print(f"üÜï –ù–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {len(new_rows)}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Ç–∞–±–ª–∏—Ü—ã
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏)
        start_row = len(existing_data) + 1
        end_row = start_row + len(new_rows) - 1
        
        append_url = f"https://sheets.googleapis.com/v4/spreadsheets/{spreadsheet_id}/values/A{start_row}:Z{end_row}?valueInputOption=RAW&key={api_key}"
        
        append_data = {
            "values": new_rows
        }
        
        print(f"üîÑ –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å—Ç—Ä–æ–∫–∏ {start_row}-{end_row}...")
        
        append_response = requests.put(append_url, json=append_data, timeout=30)
        
        if append_response.status_code == 200:
            result = append_response.json()
            updated_cells = result.get('updatedCells', 0)
            updated_rows = result.get('updatedRows', 0)
            
            print("‚úÖ –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–û!")
            print("=" * 30)
            print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {len(new_rows)}")
            print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–æ —è—á–µ–µ–∫: {updated_cells}")
            print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {updated_rows}")
            print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
            print()
            
            # –°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            tsv_filename = f"sheets-update-{datetime.now().strftime('%Y%m%d-%H%M%S')}.tsv"
            with open(tsv_filename, 'w', encoding='utf-8') as f:
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                f.write("Section\tTitle\tPrice\tDesc\tMeta\tStatus\tImages\tLink\n")
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ + –Ω–æ–≤—ã–µ)
                all_data = existing_data[1:] + new_rows  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ existing_data
                for row in all_data:
                    f.write("\t".join(str(cell) for cell in row) + "\n")
            
            print(f"üíæ TSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {tsv_filename}")
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {append_response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {append_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def sync_google_sheets_complete():
    """–ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Google Sheets —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–≤–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–∏–µ)"""
    
    print("üîÑ –ü–û–õ–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø GOOGLE SHEETS")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        config_paths = [
            'google_api_config.json',
            'scripts/google_api_config.json',
            os.path.join(os.path.dirname(__file__), 'google_api_config.json')
        ]
        
        config = None
        for path in config_paths:
            if os.path.exists(path):
                with open(path, 'r') as f:
                    config = json.load(f)
                    break
        
        if not config:
            raise FileNotFoundError("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        api_key = config.get('api_key')
        spreadsheet_id = config.get('spreadsheet_id')
    except FileNotFoundError:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/setup_google_api.py")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    if not api_key or not spreadsheet_id:
        print("‚ùå API –∫–ª—é—á –∏–ª–∏ ID —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/setup_google_api.py")
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã
    try:
        with open('products.json', 'r', encoding='utf-8') as f:
            products = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: {e}")
        return False
    
    print(f"üìä –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
    print(f"üîë API –∫–ª—é—á: {api_key[:10]}...")
    print(f"üìã –¢–∞–±–ª–∏—Ü–∞: {spreadsheet_id}")
    print()
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
    print("üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    values = [["Section", "Title", "Price", "Desc", "Meta", "Status", "Images", "Link"]]
    
    for product in products:
        row = [
            "home",
            product['title'],
            product.get('price', ''),
            product.get('desc', ''),
            product.get('meta', ''),
            product.get('status', ''),
            product['images'],
            "https://t.me/stub123"
        ]
        values.append(row)
    
    # URL –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
    url = f"https://sheets.googleapis.com/v4/spreadsheets/{spreadsheet_id}/values/A1:Z1000?valueInputOption=RAW&key={api_key}"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    data = {
        "values": values
    }
    
    print("üîÑ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Google Sheets...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å
        response = requests.put(url, json=data, timeout=30)
        
        if response.status_code == 200:
            result = response.json()
            updated_cells = result.get('updatedCells', 0)
            updated_rows = result.get('updatedRows', 0)
            
            print("‚úÖ –ü–û–õ–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
            print("=" * 40)
            print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: {len(products)}")
            print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–æ —è—á–µ–µ–∫: {updated_cells}")
            print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {updated_rows}")
            print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
            print()
            print("üéâ Google Sheets –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω!")
            print("–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —É–±—Ä–∞–Ω—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã!")
            
            # –°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            tsv_filename = f"sheets-sync-{datetime.now().strftime('%Y%m%d-%H%M%S')}.tsv"
            with open(tsv_filename, 'w', encoding='utf-8') as f:
                for row in values:
                    f.write("\t".join(str(cell) for cell in row) + "\n")
            
            print(f"üíæ TSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {tsv_filename}")
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def test_api_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"""
    try:
        # –ò—â–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        config_paths = [
            'google_api_config.json',
            'scripts/google_api_config.json',
            os.path.join(os.path.dirname(__file__), 'google_api_config.json')
        ]
        
        print(f"üîç –ò—â—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤: {config_paths}")
        
        config = None
        for path in config_paths:
            if os.path.exists(path):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {path}")
                with open(path, 'r') as f:
                    config = json.load(f)
                    break
            else:
                print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        
        if not config:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
        api_key = config.get('api_key')
        spreadsheet_id = config.get('spreadsheet_id')
        
        print(f"üîë API –∫–ª—é—á: {api_key[:10]}..." if api_key else "‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print(f"üìã ID —Ç–∞–±–ª–∏—Ü—ã: {spreadsheet_id}" if spreadsheet_id else "‚ùå ID —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        if not api_key or not spreadsheet_id:
            return False
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        url = f"https://sheets.googleapis.com/v4/spreadsheets/{spreadsheet_id}?key={api_key}"
        print(f"üåê –¢–µ—Å—Ç–∏—Ä—É—é URL: {url[:50]}...")
        response = requests.get(url, timeout=10)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        return response.status_code == 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...")
    if not test_api_connection():
        print("üîß –ù–ê–°–¢–†–û–ô–ö–ê –¢–†–ï–ë–£–ï–¢–°–Ø")
        print("=" * 30)
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:")
        print("python setup_google_api.py")
        print()
        print("–≠—Ç–æ –∑–∞–π–º–µ—Ç 5 –º–∏–Ω—É—Ç –∏ –ë–ï–°–ü–õ–ê–¢–ù–û!")
    else:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ!")
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        auto_update_google_sheets_api()
