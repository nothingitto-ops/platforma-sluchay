#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import shutil
import json
from pathlib import Path

def load_sheets_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ sheets_data.json"""
    with open('sheets_data.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def get_id_mapping():
    """–°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ ID -> —Ç–µ–∫—É—â–∏–µ –ø–∞–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ sheets"""
    products = load_sheets_data()
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏ (—É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ)
    valid_products = []
    seen_ids = set()
    
    for product in products:
        if product['id'] and product['id'].isdigit() and product['id'] not in seen_ids:
            seen_ids.add(product['id'])
            valid_products.append(product)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID
    valid_products.sort(key=lambda x: int(x['id']))
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ ID -> —Ç–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞
    id_mapping = {}
    for product in valid_products:
        product_id = product['id']
        images = product['images']
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–∞–ø–∫–∏ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if images and '|' in images:
            first_image = images.split('|')[0]
            current_folder = first_image.split('/')[0]
            id_mapping[product_id] = {
                'current_folder': current_folder,
                'title': product['title'],
                'images': images.split('|')
            }
    
    return id_mapping

def rename_folders_and_files():
    """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ ID"""
    id_mapping = get_id_mapping()
    img_dir = Path('web/img')
    
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤...")
    
    for product_id, info in id_mapping.items():
        current_folder = info['current_folder']
        title = info['title']
        images = info['images']
        
        current_path = img_dir / current_folder
        new_folder_name = f"product_{product_id}"
        new_path = img_dir / new_folder_name
        
        print(f"üìÅ ID {product_id}: {current_folder} ‚Üí {new_folder_name} ({title})")
        
        if not current_path.exists():
            print(f"‚ö†Ô∏è  –ü–∞–ø–∫–∞ {current_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            continue
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
        if new_path.exists():
            print(f"‚ö†Ô∏è  –ü–∞–ø–∫–∞ {new_folder_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é")
            shutil.rmtree(new_path)
        
        new_path.mkdir(exist_ok=True)
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
        for i, old_image_path in enumerate(images, 1):
            old_file_path = img_dir / old_image_path
            new_file_name = f"product_{product_id}_{i}.jpg"
            new_file_path = new_path / new_file_name
            
            if old_file_path.exists():
                shutil.copy2(old_file_path, new_file_path)
                print(f"  üìÑ {old_image_path} ‚Üí {new_file_name}")
            else:
                print(f"  ‚ö†Ô∏è  –§–∞–π–ª {old_image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É
        shutil.rmtree(current_path)
        print(f"  üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –ø–∞–ø–∫–∞ {current_folder}")
    
    print("‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def update_sheets_data():
    """–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ sheets_data.json —Å –Ω–æ–≤—ã–º–∏ –ø—É—Ç—è–º–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º"""
    products = load_sheets_data()
    
    print("üìù –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ sheets_data.json...")
    
    for product in products:
        if product['id'] and product['id'].isdigit():
            product_id = product['id']
            images = product['images']
            
            if images and '|' in images:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
                new_images = []
                for i in range(1, len(images.split('|')) + 1):
                    new_images.append(f"product_{product_id}/product_{product_id}_{i}.jpg")
                
                product['images'] = '|'.join(new_images)
                print(f"üîÑ ID {product_id}: –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    with open('sheets_data.json', 'w', encoding='utf-8') as f:
        json.dump(products, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ sheets_data.json –æ–±–Ω–æ–≤–ª–µ–Ω!")

def create_tsv_for_sheets():
    """–°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google Sheets"""
    products = load_sheets_data()
    
    print("üìä –°–æ–∑–¥–∞–µ–º TSV —Ñ–∞–π–ª –¥–ª—è Google Sheets...")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    valid_products = []
    seen_ids = set()
    
    for product in products:
        if product['id'] and product['id'].isdigit() and product['id'] not in seen_ids:
            seen_ids.add(product['id'])
            valid_products.append(product)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID
    valid_products.sort(key=lambda x: int(x['id']))
    
    # –°–æ–∑–¥–∞–µ–º TSV
    tsv_content = "ID\tSection\tTitle\tPrice\tDesc\tMeta\tStatus\tImages\tLink\n"
    
    for product in valid_products:
        row = [
            product['id'],
            product['section'],
            product['title'],
            product['price'],
            product['desc'],
            product['meta'],
            product['status'],
            product['images'],
            product['link']
        ]
        tsv_content += '\t'.join(row) + '\n'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º TSV —Ñ–∞–π–ª
    timestamp = int(time.time())
    filename = f"sheets-update-{timestamp}.tsv"
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(tsv_content)
    
    print(f"‚úÖ TSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
    return filename

if __name__ == "__main__":
    import time
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ ID...")
    
    # 1. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
    rename_folders_and_files()
    
    # 2. –û–±–Ω–æ–≤–ª—è–µ–º sheets_data.json
    update_sheets_data()
    
    # 3. –°–æ–∑–¥–∞–µ–º TSV –¥–ª—è Google Sheets
    tsv_file = create_tsv_for_sheets()
    
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìÅ TSV —Ñ–∞–π–ª –¥–ª—è Google Sheets: {tsv_file}")
    print(f"üìù –û–±–Ω–æ–≤–∏—Ç–µ Google Sheets, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ {tsv_file}")
