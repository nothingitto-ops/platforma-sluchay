#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç–æ–≥–æ –¥–µ–ø–ª–æ—è –±–µ–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ Google Sheets
"""

import os
import json
import shutil
import zipfile
import re
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

class CleanDeployCreator:
    def __init__(self):
        self.sheets_id = "1FLlyjpSd9EBOxZC8f0B6-iKRpKCMxcTRqWOHlgUpFoQ"
        
    def load_products_from_sheets(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets"""
        try:
            scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
            
            try:
                creds = ServiceAccountCredentials.from_json_keyfile_name('google_api_config.json', scope)
                client = gspread.authorize(creds)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å ServiceAccountCredentials: {e}")
                import pickle
                with open('token.pickle', 'rb') as token:
                    creds = pickle.load(token)
                client = gspread.authorize(creds)
            
            sheet = client.open_by_key(self.sheets_id).sheet1
            data = sheet.get_all_records()
            
            products = []
            for row in data:
                if not row.get('ID'):
                    continue
                    
                images_str = row.get('Images', '')
                if images_str:
                    images = [img.strip() for img in images_str.split('|') if img.strip()]
                else:
                    images = []
                
                product = {
                    "images": images,
                    "title": row.get('Title', ''),
                    "price": row.get('Price', ''),
                    "desc": row.get('Desc', ''),
                    "meta": row.get('Meta', ''),
                    "link": row.get('Link', 'https://t.me/stub123'),
                    "status": row.get('Status', 'preorder'),
                    "order": int(row.get('Order', 0))  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫
                }
                
                products.append(product)
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
            products.sort(key=lambda x: x.get('order', 0))
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ Google Sheets")
            print(f"üìä –ü–æ—Ä—è–¥–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫: {[p.get('order', 0) for p in products]}")
            return products
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ Google Sheets: {e}")
            return []
    
    def create_clean_app_js(self, products):
        """–°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ app.min.js –±–µ–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ Google Sheets"""
        
        # –ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω –±–µ–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ Google Sheets
        template = '''const DEFAULT_TG = 'https://t.me/stub123';
/* ===== DATA (–≥–ª–∞–≤–Ω–∞—è) ===== */
const items = [
  {
    images: ["img/shirt-white/shirt-white-1.jpg", "img/shirt-white/shirt-white-2.jpg", "img/shirt-white/shirt-white-3.jpg"],
    title: "–ë–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞",
    price: "2500 —Ä.",
    desc: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –±–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ —Ö–ª–æ–ø–∫–∞",
    meta: "100% —Ö–ª–æ–ø–æ–∫, —Ä–∞–∑–º–µ—Ä—ã: S, M, L",
    link: DEFAULT_TG,
    status: "stock"
  }
]; // –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞

/* ===== GRID (–ø–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–π ‚Äî –û–°–¢–ê–í–õ–ï–ù–û –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô) ===== */
const $catalog=document.getElementById('catalog');
const __initialTab = (location.hash.replace('#','')==='nessffo') ? 'nessffo' : 'home';
const ENABLE_INITIAL_HOME_RENDER = false; // –æ—Ç–∫–ª—é—á–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –º–∏–≥–∞–ª–∞ –Ω–µ—Ü–µ–ª–µ–≤–æ–π —Ä–∞–∑–¥–µ–ª
if(ENABLE_INITIAL_HOME_RENDER && __initialTab==='home'){
  items.forEach(it=>{
    const card=document.createElement('div');
    card.className='card'+(it.placeholder?' placeholder':'');
    const imgBox=document.createElement('div');imgBox.className='card-img';
    const img=document.createElement('img');
    const _hints = folderHintsFromFirst((it.images && it.images[0])||'');
    setSrcWithFallback(img, (it.images&&it.images[0])||'img/item-placeholder.jpg', _hints);
    img.alt=it.title||''; img.draggable=false;
    img.addEventListener('dragstart', e=>e.preventDefault());
    imgBox.appendChild(img);
    card.appendChild(imgBox);
    const h3=document.createElement('h3');h3.textContent=it.title||'';card.appendChild(h3);
    const price=document.createElement('div');price.className='price';price.textContent=it.price||'';card.appendChild(price);
    if(!it.placeholder && it.status){ const st=document.createElement('div'); const cls=(it.status==='preorder')?'pre':'in'; st.className='status '+cls; st.textContent=(it.status==='preorder')?'–ø–æ–¥ –∑–∞–∫–∞–∑':'–≤ –Ω–∞–ª–∏—á–∏–∏'; card.appendChild(st);} 
    $catalog.appendChild(card);
    if(!it.placeholder) card.addEventListener('click',()=>openModal(it, currentTab));
  });
}

/* ===== MOD–ê–õ–ö–ê ===== */
const $modal=document.getElementById('modal');
const $viewer=document.getElementById('viewer');
const $viewerImg=document.getElementById('viewerImg');
const $thumbs=document.getElementById('thumbs');
const $zoomBtn=document.getElementById('zoomBtn');
const $mTitle=document.getElementById('mTitle');
const $mPrice=document.getElementById('mPrice');
const $mDesc=document.getElementById('mDesc');
const $mMeta=document.getElementById('mMeta');

const $carePanel=document.getElementById('carePanel');
const $mStatus=document.getElementById('mStatus');
const $mLink=document.getElementById('mLink');
const $hero=document.querySelector('.hero');
$hero.setAttribute('decoding','async');
$hero.setAttribute('loading','eager');
$hero.setAttribute('fetchpriority','high');
const $topnav=document.querySelector('.topnav');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–≤–∞–π–ø–æ–≤
let touchStartY = 0;
let touchStartX = 0;
let touchEndY = 0;
let touchEndX = 0;
let isSwiping = false;
let swipeThreshold = 100;
let isSwipeUp = false;
let sheetElement = null; // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–≤–∞–π–ø–∞

function applyNavScroll(){ if(window.scrollY>8) $topnav.classList.add('scrolled'); else $topnav.classList.remove('scrolled'); }
window.addEventListener('scroll', applyNavScroll, {passive:true});
applyNavScroll();

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
function folderHintsFromFirst(imgPath) {
  if (!imgPath) return [];
  const parts = imgPath.split('/');
  if (parts.length < 2) return [];
  const folder = parts[0];
  return [folder];
}

function setSrcWithFallback(img, src, hints) {
  img.src = src;
  img.onerror = function() {
    if (hints && hints.length > 0) {
      const fallback = hints[0] + '/item-placeholder.jpg';
      if (img.src !== fallback) {
        img.src = fallback;
      }
    }
  };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(item, tab) {
  if (!item || !item.images || item.images.length === 0) return;
  
  $mTitle.textContent = item.title || '';
  $mPrice.textContent = item.price || '';
  $mDesc.textContent = item.desc || '';
  $mMeta.textContent = item.meta || '';
  $mStatus.textContent = (item.status === 'preorder') ? '–ø–æ–¥ –∑–∞–∫–∞–∑' : '–≤ –Ω–∞–ª–∏—á–∏–∏';
  $mStatus.className = 'status ' + ((item.status === 'preorder') ? 'pre' : 'in');
  $mLink.href = item.link || DEFAULT_TG;
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  setupImages(item.images);
  
  $modal.style.display = 'flex';
  document.body.style.overflow = 'hidden';
}

function setupImages(images) {
  if (!images || images.length === 0) return;
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  $thumbs.innerHTML = '';
  
  // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—ã
  images.forEach((imgSrc, index) => {
    const thumb = document.createElement('img');
    thumb.src = imgSrc;
    thumb.alt = '';
    thumb.className = index === 0 ? 'active' : '';
    thumb.onclick = () => showImage(index);
    $thumbs.appendChild(thumb);
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  showImage(0);
}

function showImage(index) {
  const images = Array.from($thumbs.children).map(thumb => thumb.src);
  if (index >= 0 && index < images.length) {
    $viewerImg.src = images[index];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∏–Ω–∏–∞—Ç—é—Ä—É
    Array.from($thumbs.children).forEach((thumb, i) => {
      thumb.className = i === index ? 'active' : '';
    });
  }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
  $modal.style.display = 'none';
  document.body.style.overflow = '';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.getElementById('closeBtn').onclick = closeModal;
$modal.onclick = function(e) {
  if (e.target === $modal) closeModal();
};

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
let currentTab = 'home';

function renderCatalog(tab) {
  currentTab = tab;
  $catalog.innerHTML = '';
  
  const filteredItems = items.filter(item => {
    if (tab === 'home') return true;
    return item.section === tab;
  });
  
  filteredItems.forEach(item => {
    const card = document.createElement('div');
    card.className = 'card';
    
    const imgBox = document.createElement('div');
    imgBox.className = 'card-img';
    
    const img = document.createElement('img');
    const _hints = folderHintsFromFirst((item.images && item.images[0]) || '');
    setSrcWithFallback(img, (item.images && item.images[0]) || 'img/item-placeholder.jpg', _hints);
    img.alt = item.title || '';
    img.draggable = false;
    img.addEventListener('dragstart', e => e.preventDefault());
    
    imgBox.appendChild(img);
    card.appendChild(imgBox);
    
    const h3 = document.createElement('h3');
    h3.textContent = item.title || '';
    card.appendChild(h3);
    
    const price = document.createElement('div');
    price.className = 'price';
    price.textContent = item.price || '';
    card.appendChild(price);
    
    if (item.status) {
      const st = document.createElement('div');
      const cls = (item.status === 'preorder') ? 'pre' : 'in';
      st.className = 'status ' + cls;
      st.textContent = (item.status === 'preorder') ? '–ø–æ–¥ –∑–∞–∫–∞–∑' : '–≤ –Ω–∞–ª–∏—á–∏–∏';
      card.appendChild(st);
    }
    
    $catalog.appendChild(card);
    card.addEventListener('click', () => openModal(item, currentTab));
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
document.querySelectorAll('.tab').forEach(tab => {
  tab.addEventListener('click', function() {
    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
    this.classList.add('active');
    
    const tabName = this.dataset.tab;
    renderCatalog(tabName);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º URL
    if (tabName === 'home') {
      history.pushState(null, '', window.location.pathname);
    } else {
      history.pushState(null, '', '#' + tabName);
    }
  });
});

// –§–∏–ª—å—Ç—Ä—ã
document.querySelectorAll('.fbtn').forEach(btn => {
  btn.addEventListener('click', function() {
    document.querySelectorAll('.fbtn').forEach(b => b.classList.remove('active'));
    this.classList.add('active');
    
    const filter = this.dataset.filter;
    filterItems(filter);
  });
});

function filterItems(filter) {
  const cards = document.querySelectorAll('.card');
  cards.forEach(card => {
    const status = card.querySelector('.status');
    if (filter === 'all') {
      card.style.display = '';
    } else if (filter === 'stock') {
      card.style.display = status && status.classList.contains('in') ? '' : 'none';
    } else if (filter === 'preorder') {
      card.style.display = status && status.classList.contains('pre') ? '' : 'none';
    }
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥
  $catalog.style.opacity = '1';
  $catalog.style.visibility = 'visible';
  $catalog.style.display = 'grid';
  
  // –†–µ–Ω–¥–µ—Ä–∏–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª
  const initialTab = (location.hash.replace('#', '') === 'nessffo') ? 'nessffo' : 'home';
  document.querySelector(`[data-tab="${initialTab}"]`).classList.add('active');
  renderCatalog(initialTab);
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (initialTab === 'nessffo') {
    $hero.src = 'img/bannerh.jpg';
  } else {
    $hero.src = 'img/banner.jpg';
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
window.addEventListener('popstate', function() {
  const tab = (location.hash.replace('#', '') === 'nessffo') ? 'nessffo' : 'home';
  document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
  document.querySelector(`[data-tab="${tab}"]`).classList.add('active');
  renderCatalog(tab);
  
  if (tab === 'nessffo') {
    $hero.src = 'img/bannerh.jpg';
  } else {
    $hero.src = 'img/banner.jpg';
  }
});
'''
        
        # –ó–∞–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
        start_marker = 'const items = ['
        end_marker = ']; // –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞'
        
        start_pos = template.find(start_marker)
        end_pos = template.find(end_marker, start_pos) + len(end_marker)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        new_items = 'const items = [\n'
        for i, product in enumerate(products):
            new_items += f"""  {{
    images: {json.dumps(product['images'], ensure_ascii=False)},
    title: "{product['title']}",
    price: "{product['price']}",
    desc: "{product['desc']}",
    meta: "{product['meta']}",
    link: "{product['link']}",
    status: "{product['status']}"
  }}{',' if i < len(products) - 1 else ''}
"""
        new_items += ']; // –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞'
        
        # –ó–∞–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        clean_content = template[:start_pos] + new_items + template[end_pos:]
        
        return clean_content
    
    def create_clean_deploy(self, products):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç–æ–≥–æ –¥–µ–ø–ª–æ—è"""
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        deploy_folder = f'deploy_clean_{timestamp}'
        
        try:
            os.makedirs(deploy_folder, exist_ok=True)
            
            # –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–π app.min.js
            clean_app_js = self.create_clean_app_js(products)
            with open(f'{deploy_folder}/app.min.js', 'w', encoding='utf-8') as f:
                f.write(clean_app_js)
            
            # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
            web_files = ['index.html', 'styles.min.css', 'mobile.overrides.css']
            for file in web_files:
                if os.path.exists(f'web/{file}'):
                    shutil.copy2(f'web/{file}', f'{deploy_folder}/{file}')
                    print(f'‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file}')
            
            # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É img
            if os.path.exists('web/img'):
                shutil.copytree('web/img', f'{deploy_folder}/img')
                print('‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞: img')
            
            # –°–æ–∑–¥–∞–µ–º ZIP
            zip_filename = f'platforma_clean_deploy_{timestamp}.zip'
            with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
                for root, dirs, files in os.walk(deploy_folder):
                    for file in files:
                        file_path = os.path.join(root, file)
                        arcname = os.path.relpath(file_path, deploy_folder)
                        zipf.write(file_path, arcname)
            
            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
            shutil.rmtree(deploy_folder)
            
            print(f'‚úÖ –°–æ–∑–¥–∞–Ω —á–∏—Å—Ç—ã–π –¥–µ–ø–ª–æ–π: {zip_filename}')
            return zip_filename
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–ª–æ—è: {e}")
            return None
    
    def verify_clean_deploy(self, zip_filename):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å—Ç–æ—Ç—ã –¥–µ–ø–ª–æ—è"""
        try:
            with zipfile.ZipFile(zip_filename, 'r') as zipf:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º app.min.js
                app_js_content = zipf.read('app.min.js').decode('utf-8')
                
                # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ Google Sheets
                if 'sheets' in app_js_content.lower() or 'spreadsheets' in app_js_content.lower():
                    print("‚ö†Ô∏è –í –¥–µ–ø–ª–æ–µ –Ω–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ Google Sheets")
                    return False
                
                print("‚úÖ –î–µ–ø–ª–æ–π –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç - –Ω–µ—Ç —Å—Å—ã–ª–æ–∫ –Ω–∞ Google Sheets")
                return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–ª–æ—è: {e}")
            return False
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è —á–∏—Å—Ç–æ–≥–æ –¥–µ–ø–ª–æ—è"""
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç–æ–≥–æ –¥–µ–ø–ª–æ—è...")
        print("üßπ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Google Sheets")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        products = self.load_products_from_sheets()
        
        if not products:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–π –¥–µ–ø–ª–æ–π
        deploy_file = self.create_clean_deploy(products)
        
        if deploy_file:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∏—Å—Ç–æ—Ç—É
            is_clean = self.verify_clean_deploy(deploy_file)
            
            if is_clean:
                print("\nüéâ –ß–∏—Å—Ç—ã–π –¥–µ–ø–ª–æ–π —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
                print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
                print(f"   - –¢–æ–≤–∞—Ä–æ–≤: {len(products)}")
                print(f"   - –î–µ–ø–ª–æ–π: {deploy_file}")
                print("\nüîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:")
                print("   ‚úÖ –ù–µ—Ç —Å—Å—ã–ª–æ–∫ –Ω–∞ Google Sheets")
                print("   ‚úÖ –ù–µ—Ç API –∫–ª—é—á–µ–π")
                print("   ‚úÖ –ù–µ—Ç –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                print("   ‚úÖ –ì–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ –ª—é–±–æ–π —Ö–æ—Å—Ç–∏–Ω–≥")
            else:
                print("‚ùå –î–µ–ø–ª–æ–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ Google Sheets")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–ø–ª–æ—è")
        
        return deploy_file

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    creator = CleanDeployCreator()
    creator.run()

if __name__ == "__main__":
    main()
