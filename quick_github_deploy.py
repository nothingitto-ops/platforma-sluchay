#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üêô Quick GitHub Deploy –¥–ª—è Platforma
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è —Å–∞–π—Ç–∞ —á–µ—Ä–µ–∑ GitHub
"""

import os
import sys
import subprocess
from datetime import datetime

def main():
    print("üêô Quick GitHub Deploy")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ web_combined_working
    if not os.path.exists('web_combined_working'):
        print("‚ùå –ü–∞–ø–∫–∞ 'web_combined_working' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if not os.path.exists(os.path.join('web_combined_working', '.git')):
        print("‚ùå –ü–∞–ø–∫–∞ 'web_combined_working' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ Git –≤ –ø–∞–ø–∫–µ web_combined_working")
        return False
    
    try:
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º products.json
        print("üìù –û–±–Ω–æ–≤–ª—è–µ–º products.json...")
        if os.path.exists('products.json'):
            import shutil
            shutil.copy2('products.json', 'web_combined_working/products.json')
            print("‚úÖ products.json –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        print("üñºÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        if os.path.exists('img'):
            web_img_dir = os.path.join('web_combined_working', 'img')
            if os.path.exists(web_img_dir):
                import shutil
                shutil.rmtree(web_img_dir)
            shutil.copytree('img', web_img_dir)
            print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
        result = subprocess.run(['git', 'status', '--porcelain'], 
                              capture_output=True, text=True, cwd='web_combined_working')
        
        if result.returncode == 0:
            changes = result.stdout.strip()
            if not changes:
                print("‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
                return True
        
        # 4. –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print("üì¶ –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
        result = subprocess.run(['git', 'add', '.'], 
                              capture_output=True, text=True, cwd='web_combined_working')
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {result.stderr}")
            return False
        
        # 5. –ö–æ–º–º–∏—Ç–∏–º
        timestamp = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        commit_message = f"üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π ({timestamp})"
        
        print(f"üíæ –ö–æ–º–º–∏—Ç–∏–º: {commit_message}")
        result = subprocess.run(['git', 'commit', '-m', commit_message], 
                              capture_output=True, text=True, cwd='web_combined_working')
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–º–∏—Ç–∞: {result.stderr}")
            return False
        
        # 6. –ü—É—à–∏–º
        print("‚¨ÜÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ GitHub...")
        result = subprocess.run(['git', 'push'], 
                              capture_output=True, text=True, cwd='web_combined_working')
        if result.returncode != 0:
            # –ï—Å–ª–∏ –Ω–µ—Ç upstream –≤–µ—Ç–∫–∏, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ—ë
            if "no upstream branch" in result.stderr:
                print("üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º upstream –≤–µ—Ç–∫—É...")
                result = subprocess.run(['git', 'push', '--set-upstream', 'origin', 'main'], 
                                      capture_output=True, text=True, cwd='web_combined_working')
                if result.returncode != 0:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É—à–∞: {result.stderr}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É—à–∞: {result.stderr}")
                return False
        
        print("‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üåê –°–∞–π—Ç –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ 'web_combined_working' —è–≤–ª—è–µ—Ç—Å—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É—à –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
