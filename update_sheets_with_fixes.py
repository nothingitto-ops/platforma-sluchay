#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import gspread
from google.oauth2.credentials import Credentials
from datetime import datetime

def update_sheets_with_fixes():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Sheets —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    try:
        print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Sheets —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open('google_api_config.json', 'r') as f:
            config = json.load(f)
            spreadsheet_id = config.get('spreadsheet_id')
        
        if not spreadsheet_id:
            print("‚ùå ID —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets API
        SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
        CREDENTIALS_FILE = 'token.json'
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets
        creds = Credentials.from_authorized_user_file(CREDENTIALS_FILE, scopes=SCOPES)
        client = gspread.authorize(creds)
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        spreadsheet = client.open_by_key(spreadsheet_id)
        worksheet = spreadsheet.sheet1
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ products.json
        with open('products.json', 'r', encoding='utf-8') as f:
            products = json.load(f)
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        all_values = worksheet.get_all_values()
        if not all_values:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞!")
            return False
        
        headers = all_values[0]
        existing_data = all_values[1:]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
        updated_count = 0
        
        for product in products:
            product_id = str(product.get('id', ''))
            
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ ID
            row_to_update = None
            for i, row in enumerate(existing_data):
                if len(row) > 0 and str(row[0]) == product_id:
                    row_to_update = i + 2  # +2 –ø–æ—Ç–æ–º—É —á—Ç–æ 1 - –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 0
                    break
            
            if row_to_update:
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                update_data = [
                    product.get('id', ''),
                    product.get('order', ''),
                    product.get('section', ''),
                    product.get('title', ''),
                    product.get('price', ''),
                    product.get('desc', ''),
                    product.get('meta', ''),
                    product.get('status', ''),
                    product.get('images', ''),
                    product.get('link', '')
                ]
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ
                worksheet.update(f'A{row_to_update}:J{row_to_update}', [update_data])
                updated_count += 1
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {product.get('title', 'Unknown')} (ID: {product_id})")
            else:
                print(f"‚ö†Ô∏è –¢–æ–≤–∞—Ä —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated_count}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google Sheets: {e}")
        return False

if __name__ == "__main__":
    update_sheets_with_fixes()
