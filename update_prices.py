#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import re
from datetime import datetime

def update_price(product_title, new_price):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ products.json –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Å app.min.js"""
    
    print(f"üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –¥–ª—è '{product_title}' –Ω–∞ '{new_price}'")
    
    # 1. –û–±–Ω–æ–≤–ª—è–µ–º products.json
    try:
        with open('products.json', 'r', encoding='utf-8') as f:
            products = json.load(f)
        
        # –ò—â–µ–º —Ç–æ–≤–∞—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        found = False
        for product in products:
            if product.get('title') == product_title:
                old_price = product.get('price', '')
                product['price'] = new_price
                product['updated'] = datetime.now().isoformat()
                found = True
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤ products.json: {old_price} ‚Üí {new_price}")
                break
        
        if not found:
            print(f"‚ùå –¢–æ–≤–∞—Ä '{product_title}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ products.json")
            return False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π products.json
        with open('products.json', 'w', encoding='utf-8') as f:
            json.dump(products, f, ensure_ascii=False, indent=2)
        
        print("‚úÖ products.json –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è products.json: {e}")
        return False
    
    # 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å app.min.js
    try:
        with open('app.min.js', 'r', encoding='utf-8') as f:
            app_js_content = f.read()
        
        # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º —Ü–µ–Ω—É –≤ app.min.js
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞ –∏ —Ü–µ–Ω–æ–π
        pattern = rf'("title": "{re.escape(product_title)}",\s*"price": ")[^"]*(")'
        match = re.search(pattern, app_js_content)
        
        if match:
            old_price_js = match.group(0)
            new_price_js = f'"title": "{product_title}",\n    "price": "{new_price}"'
            
            app_js_content = app_js_content.replace(old_price_js, new_price_js)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π app.min.js
            with open('app.min.js', 'w', encoding='utf-8') as f:
                f.write(app_js_content)
            
            print("‚úÖ app.min.js —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return True
        else:
            print("‚ö†Ô∏è –¶–µ–Ω–∞ –≤ app.min.js –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ products.json –æ–±–Ω–æ–≤–ª–µ–Ω")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ app.min.js: {e}")
        return False

if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    update_price("–ü–æ—è—Å-—é–±–∫–∞", "3000 —Ä.")
